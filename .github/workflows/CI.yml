name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019
    env:
      VC_DIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC'
      MSYS: 'D:\'
    steps:   
    - name: Install msys2
      uses: msys2/setup-msys2@v2
      with:
        location: ${{ env.MSYS }}
        install: base-devel autotools yasm     

    - name: Set path
      shell: cmd
      run: |
        set path=${{ env.VC_DIR }};${{ env.MSYS }}msys64\mingw64\bin;${{ env.MSYS }}msys64\usr\bin;
        set path=%path%C:\hostedtoolcache\windows\python\3.7.9\x64;C:\Program Files (x86)\Inno Setup 6;C:\Program Files\7-Zip;C:\Program Files\Git\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PowerShell\7\;
        echo CLEAN_PATH=%path% > %GITHUB_ENV%
   
    - name: Install polib      
      run: |
        pip install --upgrade polib 
    
    - name: Setup Toolchain
      run: |
        curl -OL http://files.1f0.de/mingw/mingw-w64-gcc-11.2-stable-r36.7z             
        &'C:\Program Files\7-Zip\7z.exe' x -y mingw*.7z -o'D:\msys64\mingw64'
        
    - name: Install Nasm
      run: |
        curl -OL https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip 
        &'C:\Program Files\7-Zip\7z.exe' x nasm*.zip -o'D:' 
        mv D:/nasm-2.15.05/nasm.exe 'C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC'        
 
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0    
        submodules: true
      
    - name: Checkout modules
      run: git submodule update --init --recursive         

    - name: Build the package (x64)
      env:
        MPCHC_MSYS: ${{ env.MSYS }}msys64
        MPCHC_MINGW32: ${{ env.MSYS }}msys64\mingw64
        MPCHC_MINGW64: ${{ env.MSYS }}msys64\mingw64
        MSYSTEM: MINGW32
        MSYS2_PATH_TYPE: inherit
        MPCHC_GIT: 'C:\Program Files\Git'
        MPCHC_WINSDK_VER: 10
        MPCHC_VS_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\'
        PATH: ${{env.CLEAN_PATH}}
      shell: cmd
      run: |
        ./build.bat Build x64 MPC-HC Release 7z        

    - name: Get current timestamp      
      id: timestamp
      run: echo "::set-output name=date::$(date +%Y-%m-%d)"
  
    - name: Zip Packages
      run: |
        mkdir -p bin/mpc-hc_x64/Shaders
        mkdir -p bin/mpc-hc_x64/Shaders11
        cp distrib/x64/D3DCompiler_47.dll bin/mpc-hc_x64
        cp distrib/x64/D3DX9_43.dll bin/mpc-hc_x64
        cp distrib/x64/MediaInfo.dll bin/mpc-hc_x64
        cp src/mpc-hc/res/shaders/dx9/*.hlsl bin/mpc-hc_x64/Shaders
        cp src/mpc-hc/res/shaders/dx11/*.hlsl bin/mpc-hc_x64/Shaders11 
        rm -rf bin/mpc-hc_x64/*.pdb
        rm -rf bin/mpc-hc_x64/*.pdb
        rm -rf bin/mpc-hc_x64/*.exp
        rm -rf bin/mpc-hc_x64/LAVFilters64/*.pdb
        $date = Get-Date -Format "yyyy-MM-dd"
        7z a All-in-One-mpc-hc-${date}.7z bin/*
          
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:       
        tag_name: mpc-hc-${{ steps.timestamp.outputs.date }}
        name: ${{ steps.timestamp.outputs.date }}
        body: All-in-One = MPC-HC*.x64.7z+Shaders+Shaders11+D3DCompiler_47.dll+D3DX9_43.dll+MediaInfo.dll
        files: |
          All*.7z
          bin/*x64.7z   
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
