name: CI

on:
  workflow_dispatch:

env:
    WINSYSTEM: '8.1'

jobs:
  build:
    runs-on: windows-latest
    env:
      VC_DIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC'
      MSYS: 'D:\'
    steps:   
    - name: Install msys2
      uses: msys2/setup-msys2@v2
      with:
        location: ${{ env.MSYS }}
        install: base-devel autotools     

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Set ENV
      shell: cmd
      run: |
        set Path=${{ env.pythonLocation}};${{ env.VC_DIR }};${{ env.MSYS }}msys64\mingw64\bin;${{ env.MSYS }}msys64\usr\bin;
        set Path=%Path%C:\Program Files\7-Zip;C:\Program Files\Git;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PowerShell\7\;
        echo CLEAN_PATH=%path% > %GITHUB_ENV%
   
    - name: Install polib      
      env:
        PATH: ${{env.CLEAN_PATH}} 
      run: |
        pip install polib 
        python -c 'import sys; import polib; print(polib.escape(""Testing polib..."")); print(sys.version);' 

    - name: Setup Toolchain
      run: |
        curl -OL http://files.1f0.de/mingw/mingw-w64-gcc-11.2-stable-r36.7z
        &'C:\Program Files\7-Zip\7z.exe' x -y *.7z -o'D:\msys64\mingw64'                  

    - name: Set up Nasm
      uses: ilammy/setup-nasm@v1      
      with:
        destination: ${{env.VC_DIR}}
  
    - name: Install Yasm
      shell: powershell
      run: |
        Invoke-WebRequest -Method Get -Uri http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe -OutFile ${{ env.MSYS }}msys64\usr\bin\yasm.exe -UseBasicParsinge  
  
    - name: Install Windows 8.1 SDK
      if: env.WINSYSTEM == '8.1'
      shell: powershell
      run: |
        Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
        Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit"  
  
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0    
        submodules: true
      
    - name: Checkout modules
      run: git submodule update --init --recursive         

    - name: Build the package (x64)
      env:
        MPCHC_MSYS: ${{ env.MSYS }}msys64
        MPCHC_MINGW32: ${{ env.MSYS }}msys64\mingw64'
        MPCHC_MINGW64: ${{ env.MSYS }}msys64\mingw64'
        MSYSTEM: MINGW32
        MSYS2_PATH_TYPE: inherit
        MPCHC_WINSDK_VER: ${{ env.WINSYSTEM }}
        MPCHC_GIT: 'C:\Program Files\Git'
        PATH: ${{env.CLEAN_PATH}}
      shell: cmd
      run: |
        set PATH
        ./build.bat x64 Release Packages

    - name: Upload 7z archives (x64)
      uses: actions/upload-artifact@v2
      with:
        name: MPC-HC-x64 
        path: bin/*x64.7z   
