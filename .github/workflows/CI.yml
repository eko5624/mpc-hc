name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    env:
      VC_DIR: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC'
      MSYS: 'D:\'
    steps:   
    - name: Install msys2
      uses: msys2/setup-msys2@v2
      with:
        location: ${{ env.MSYS }}
        install: base-devel autotools yasm 
        
    - name: Set path
      shell: cmd
      run: |
        set Path=${{ env.VC_DIR }};${{ env.MSYS }}msys64\mingw64\bin;${{ env.MSYS }}msys64\usr\bin;
        set Path=%Path%C:\hostedtoolcache\windows\Python\3.9.10\x64;C:\Program Files\7-Zip;C:\Program Files\Git;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PowerShell\7\;
        echo CLEAN_PATH=%path% > %GITHUB_ENV%
   
    - name: Install polib      
      run: |
        pip install --upgrade polib 
    
    - name: Setup Toolchain
      run: |
        curl -OL http://files.1f0.de/mingw/mingw-w64-gcc-11.2-stable-r36.7z             
        &'C:\Program Files\7-Zip\7z.exe' x -y *.7z -o'D:\msys64\mingw64'
    
    - name: Set up Nasm
      uses: ilammy/setup-nasm@v1      
      with:
        destination: ${{env.VC_DIR}} 
        
    - name: Install Microsoft Visual C++ 2010 redistributable packages
      shell: powershell
      run: |
        choco install vcredist2010        
  
    - name: Install Windows 8.1 SDK
      shell: powershell
      run: |
        choco install windows-sdk-8.1 
  
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0    
        submodules: true
      
    - name: Checkout modules
      run: git submodule update --init --recursive         

    - name: Build the package (x64)
      env:
        MPCHC_MSYS: ${{ env.MSYS }}msys64
        MPCHC_MINGW32: ${{ env.MSYS }}msys64\mingw64
        MPCHC_MINGW64: ${{ env.MSYS }}msys64\mingw64
        MSYSTEM: MINGW32
        MSYS2_PATH_TYPE: inherit
        MPCHC_WINSDK_VER: 8.1
        MPCHC_GIT: 'C:\Program Files\Git'
        PATH: ${{env.CLEAN_PATH}}
      shell: cmd
      run: |
        set PATH
        ./build.bat Build x64 MPC-HC Release
   
    - name: Get current timestamp      
      id: timestamp
      run: echo "::set-output name=date::$(date +%Y-%m-%d)"

    - name: Upload 7z archives (x64)
      run: |
        mkdir -p bin/mpc-hc_x64/Shaders
        mkdir -p bin/mpc-hc_x64/Shaders11
        cp src/mpc-hc/res/shaders/dx9/*.hlsl bin/mpc-hc_x64/Shaders
        cp src/mpc-hc/res/shaders/dx11/*.hlsl bin/mpc-hc_x64/Shaders11 
        cp distrib/x64/D3DCompiler_47.dll bin/mpc-hc_x64
        cp distrib/x64/D3DX9_43.dll bin/mpc-hc_x64
        cp distrib/x64/MediaInfo.dll bin/mpc-hc_x64       
    - uses: actions/upload-artifact@v2
      with:
        name: Portable-${{ steps.timestamp.outputs.date }}
        path: |
          bin/mpc-hc_x64/
          !bin/mpc-hc_x64/*.pdb
          !bin/mpc-hc_x64/*.lib
          !bin/mpc-hc_x64/*.exp 
